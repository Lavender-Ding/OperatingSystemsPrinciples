README:
-----------------------------------------------------------------------------------
There are two files for this lab, and I first list them all and then describe each of them.
-----------------------------------------------------------------------------------
LIst of documents:
lab1a.c
Makefile
-----------------------------------------------------------------------------------
Descriptions:

lab1a.c:
A single C program that implement both non-canonical form input and passing them between two processes.
1. ./lab1a
First of all, simply type in the command ./lab1a with no argument will run part 1, which is non-canonical, no echo mode, character-at-a-time I/O. In this part, console is changed to non-canonical mode at the beginning. The code then read input from the keyboard into a buffer and write the received characters back to display, also one-character-at-a-time. The code map <cr> and <lf> to <cr><lf> and will restore normal mode and exit upon receiving ^D.
2. ./lab1a --shell
Secondly, if you want to run part 2, type in the command ./lab1a --shell, the code will run part 2 which includes passing input and output through shell. In this mode, it first create a child process and two unidirectional pipes to pass through information. It then create one thread, which read input from the shell pipe and write it to stdout. In the parent process, it read inout from the keyboard using non-canonical mode and echo it to display. The code also deal with exceptions, like upon receiving ^D from terminal, it will restore terminal mode and exit 0. It also catch SIGPIPE and exit 1 when shell receiving and ^C. Upon receiving ^D from shell, it will also exit with 1.
3. Other errors
The code carefully check other errors like fork failure, pipe failure and execvp failure etc. Under these error conditions, the code will exit with value 2.

-----------------------------------------------------------------------------------
Makefile:
Build the lab executable and support check, clean and dist.

make : to compile lab1a.c
make clean : to clean files created by make
make dist : to build the tarball

-----------------------------------------------------------------------------------
